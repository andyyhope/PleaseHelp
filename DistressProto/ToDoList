##############################################

    TO DO

##############################################

AppearanceConstants
- use a #define for all colors, strings, or any areas which would help a user modify the app with ease.

Source Code
- Tidy up all source code with correct spaces, indentations etc...
- Enter comments for all methods
- Remove uneccessary code

CallingViewController
- Turn Contact dialog box into button

OptionViewController
- Look at why the message is sending in batches of 3



##############################################

    COMPLETED
    
##############################################

All Views
- Remove any reference for ios5 iphone versions. 

Option View Controller 
- Message View is broken, i think it has something to do with the iOS Version #ifdef, cannot call [self ] methods from within
- need to push the lat/long to this view controller to populate the pre-defined message correctly
- need to push the number of the recipient and possibly the name for the message.

App Delegate
- Location string: where street name says "(null)", replace with empty string
- Call cycle, figure out why it isnt working
- implement loop counter, ie. reached the end of the cycle.
- ###### IMPORTANT ######
    The Contacts plist needs to come from the AppDelegate,
    At the moment you have the MainContactViewController hosting this information for table rows. Ive created a temporary workaround by copying the methods into App Delegate, but you may need to check them to have a look.
    (Call me and i can explain it better)
    Note: This seems to be working now, but the code is a bit untidy perhaps?
- need to look into why it has an object in the array when a fresh build via xcode is done, as it doesnt come up with the uialertview to show to add a contact
- loops through the 'add contact' on startup

Passcode From Main Screen (Enabled)
- Label which displays passcode hint
- Include (X) unsuccessful attempt limit with (X) minute lockout
- I created a timer in one of the first early prototypes, it should be in AndyyPrototypes folder somewhere
- I tried doing this but i have no idea where instructionLabel gets its values from lol.

Passcode Settings
- When user clears passcode it will clear recovery hint
- error handle - recovery hint, user has to enter a value
- Set Passcode View
-- on iPhone 4 devices: the button is squash and it does not look correct
- Added more UI visual elements to assist user in setting apps
- changed button strings

Main View
- Start using items.plist data instead of hardcoded arrays
- Contact images not showing

ContactAddViewController
- Add place holders
- format number string to remove spaces, ie "0421 121 212" - Cannot make calls when the number has spaces
- Error handle - if nuRll value and save is selected then put a red astericks next to field with a note saying it needs to be filled - possibly a notification from navbar - photo is not needed, however needs to show the default profile image here
- import new contact wipes image value and needs to make it the default image if one is not supplied
- removed "error" from alert views
- removed white space trimming from relation field (was never meant to be there. Only for the phone number)

ContactEditViewController
- Adjust navbar and remove the 'Cancel' and '+' when it should only have the back button for saving.
- Back Button no longer saves.
- format number string to remove spaces, ie "0421 121 212" - Cannot make calls when the number has spaces
- Error handling for each textfield, example - you can edit a contact and blank out a field and this is accepted

CallingViewController
- fix label not showing

Option View Controller 
- on iPhone 4 devices: the location is in white text and cannot be seen as it gets squashed and overlaps the white call button
- When last person is called and option view displays, app crashes when a sms or call function is selected

Settings Contact View
- Replace buttons with custom graphics
- Refresh the uitableview when going to add a new record - to stop error images on new records
- Any contact that is imported without an image, use the default_profile_image.gif file
    // Changed to defaultProfile.png + @2x
- When importing a contact from AddressBook, show the ContactEditViewController, with all the fields imported, and highlight "Relation"

Appearance/UI
- Create a custom class for all the buttons
- use a #define for all the [UIColor whiteColor]
- Set a tintColor for UIBarButtonItem




